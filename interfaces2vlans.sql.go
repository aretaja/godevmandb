// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.0
// source: interfaces2vlans.sql

package godevmandb

import (
	"context"
)

const CountInterfaces2vlans = `-- name: CountInterfaces2vlans :one
SELECT COUNT(*)
FROM interfaces2vlans
`

func (q *Queries) CountInterfaces2vlans(ctx context.Context) (int64, error) {
	row := q.db.QueryRow(ctx, CountInterfaces2vlans)
	var count int64
	err := row.Scan(&count)
	return count, err
}

const CreateInterface2vlan = `-- name: CreateInterface2vlan :one
INSERT INTO interfaces2vlans (v_id, if_id)
VALUES ($1, $2)
RETURNING v_id, if_id, updated_on, created_on
`

type CreateInterface2vlanParams struct {
	VID  int64 `json:"v_id"`
	IfID int64 `json:"if_id"`
}

func (q *Queries) CreateInterface2vlan(ctx context.Context, arg CreateInterface2vlanParams) (Interfaces2vlan, error) {
	row := q.db.QueryRow(ctx, CreateInterface2vlan, arg.VID, arg.IfID)
	var i Interfaces2vlan
	err := row.Scan(
		&i.VID,
		&i.IfID,
		&i.UpdatedOn,
		&i.CreatedOn,
	)
	return i, err
}

const DeleteInterface2vlan = `-- name: DeleteInterface2vlan :exec
DELETE FROM interfaces2vlans
WHERE v_id = $1
  AND if_id = $2
`

type DeleteInterface2vlanParams struct {
	VID  int64 `json:"v_id"`
	IfID int64 `json:"if_id"`
}

func (q *Queries) DeleteInterface2vlan(ctx context.Context, arg DeleteInterface2vlanParams) error {
	_, err := q.db.Exec(ctx, DeleteInterface2vlan, arg.VID, arg.IfID)
	return err
}

const GetInterfaces2vlans = `-- name: GetInterfaces2vlans :many
SELECT v_id, if_id, updated_on, created_on
FROM interfaces2vlans
ORDER BY v_id
`

func (q *Queries) GetInterfaces2vlans(ctx context.Context) ([]Interfaces2vlan, error) {
	rows, err := q.db.Query(ctx, GetInterfaces2vlans)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Interfaces2vlan
	for rows.Next() {
		var i Interfaces2vlan
		if err := rows.Scan(
			&i.VID,
			&i.IfID,
			&i.UpdatedOn,
			&i.CreatedOn,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
